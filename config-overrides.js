/* eslint-disable react-hooks/rules-of-hooks */
// https://medium.com/javascript-in-plain-english/introduce-babel-new-plugins-to-create-react-app-ea55f56c3811

const path = require('path');
const CircularDependencyPlugin = require('circular-dependency-plugin');
const { override, addBabelPlugin, addWebpackPlugin } = require('customize-cra');

const aliasPathOf = (relativePath) => path.resolve(__dirname, relativePath);

module.exports = override(
  addWebpackPlugin(
    new CircularDependencyPlugin({
      exclude: /node_modules/,

      include: /src/,

      failOnError: true,

      // `onStart` is called before the cycle detection starts
      onStart() {
        console.log('start detecting webpack modules cycles');
      },
      // `onDetected` is called for each module that is cyclical
      onDetected({ paths, compilation }) {
        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        compilation.errors.push(new Error(paths.join(' -> ')));
      },
      // `onEnd` is called before the cycle detection ends
      onEnd() {
        console.log('end detecting webpack modules cycles');
      },
    }),
  ),
  addBabelPlugin([
    'module-resolver',
    {
      alias: {
        '@components': aliasPathOf('src/components'),
        '@containers': aliasPathOf('src/containers'),
        '@lib': aliasPathOf('src/lib'),
        '@hooks': aliasPathOf('src/hooks'),
        '@hocs': aliasPathOf('src/hocs'),
        '@pages': aliasPathOf('src/pages'),
        '@providers': aliasPathOf('src/providers'),
      },
    },
  ]),
);
